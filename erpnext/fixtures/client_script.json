[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2023-01-20 21:32:44.405015",
  "module": "Manufacturing",
  "name": "work order script",
  "script": "\nfunction success_alert(doc){\n\n    frappe.show_alert({\n        message:__(doc.name+' Successfully Created'),\n        indicator:'green'\n    }, 6);\n    \n}\n\nfunction process_work_orders(listview){\n    \n    let is_valid = true;\n    let selected_item_list = listview.get_checked_items();\n    \n    for(var k = 0; k < selected_item_list.length; k++){\n        if(selected_item_list[k].status === 'Draft' && is_valid === true){\n            frappe.msgprint(\"All Work Orders need to be submitted!\");\n            is_valid = false;\n        }\n    }\n\n    if(is_valid === true){\n        \n        for(var j = 0; j < selected_item_list.length; j++){\n            \n                frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    doctype: \"Work Order\",\n                    name: selected_item_list[j].name,\n                },\n                callback(r) {\n                    if(r.message) {\n                        \n                        var task = r.message;\n                        var data = task;\n                        \n                        frappe.call({\n                            method: \"frappe.client.get\",\n                            args: {\n                                doctype: \"BOM\",\n                                name: data.bom_no\n                            },\n                            callback(r) {\n                                if(r.message) {\n                                    \n                                    var task1 = r.message;\n                                        \n                                \tfrappe.xcall('erpnext.manufacturing.doctype.work_order.work_order.make_stock_entry', {\n                                \t\t\t\t\t'work_order_id': data.name,\n                                \t\t\t\t\t'purpose': 'Manufacture',\n                                \t\t\t\t\t'qty': data.qty\n                        \t\t\t}).then(stock_entry => {\n\n                        \t\t\t\tlet returned_obj = stock_entry;\n                        \n                                        frappe.db.insert(returned_obj).then(function(doc) { \n                                                frappe.call({\n                                                    \"method\": \"frappe.client.submit\",\n                                                    \"args\": {\n                                                         \"doc\" : doc\n                                                     }\n                                                });\n                                                \n                                                 cur_list.$checks && cur_list.$checks.prop(\"checked\", false);\n                                                 cur_list.on_row_checked();\n                                                 \n                                                 success_alert(doc);\n                                                 cur_list.$checks.prop(\"checked\", false);\n                                                 setTimeout(()=>{\n                                                    console.log('Time Break');\n                                                 },250);\n                                            \n                                            });\n                        \t\t\t});\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    }\n}\n\nfunction confirm_process(listview){\n    frappe.confirm(\n        'Are you sure you want to process the orders?',\n        function(){\n            process_work_orders(listview);\n        },\n        function(){\n           window.close();\n        }\n    )\n}\n\n\nfunction check_checkboxes(listview) {\n    \n\t$.each(cur_list.$checks, (i, el) => {\n\t\tlet docname = $(el).attr(\"data-name\");\n\t\tcur_list.$result\n\t\t\t.find(`.list-row-checkbox[data-name='Work Order']`)\n\t});\n\n     setTimeout(()=>{\n    \tif(cur_list.$checks.length===0){\n\t     setTimeout(()=>{\n            listview.page.remove_inner_button('Proceed');\n\t     },10);\n        }\n \t},100);\n\t\n \tsetTimeout(()=>{\n\tif(cur_list.$checks.length>0){\n        listview.page.add_inner_button(__(\"Proceed\"), function () {\n            confirm_process(listview);\n        })\n        .addClass(\"btn-primary\");\n\t}\n \t},50);\n}\n\n\nfrappe.listview_settings['Work Order'] = {\n    \n\tadd_fields: [\"bom_no\", \"status\", \"sales_order\", \"qty\",\n\t\"produced_qty\", \"expected_delivery_date\", \"planned_start_date\", \"planned_end_date\"],\n\t\n    filters: [[\"status\", \"!=\", \"Stopped\"]],\n\t\n\tget_indicator: function(doc) {\n\t\tif(doc.status===\"Submitted\") {\n\t\t\treturn [__(\"Not Started\"), \"orange\", \"status,=,Submitted\"];\n\t\t} else {\n\t\t\treturn [__(doc.status), {\n\t\t\t\t\"Draft\": \"red\",\n\t\t\t\t\"Stopped\": \"red\",\n\t\t\t\t\"Not Started\": \"red\",\n\t\t\t\t\"In Process\": \"orange\",\n\t\t\t\t\"Completed\": \"green\",\n\t\t\t\t\"Cancelled\": \"gray\"\n\t\t\t}[doc.status], \"status,=,\" + doc.status];\n\t\t}\n\t},\n    \n      \n    refresh: function(listview) {\n        check_checkboxes(listview);\n \t\n    },\n    \n    onload: function(listview) {\n        \n        listview.page.add_action_item(\"Proceed\", function() {\n            confirm_process(listview);\n        });\n\n    },\n\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2023-01-18 14:16:45.031346",
  "module": null,
  "name": "work_order_form_script",
  "script": "let is_viewed;\n\nfrappe.ui.form.on('Work Order', {\n\trefresh(frm) {\n\t\tif(is_viewed !== frm.doc.name){\n\t\t     console.log('ssss',frm.doc.name)\n\t\t\tis_viewed = frm.doc.name;\n\t\t\tfrm.reload_doc();\n\t\t\t\t   \n\t\t}\n\t}\n})",
  "view": "Form"
 }
]